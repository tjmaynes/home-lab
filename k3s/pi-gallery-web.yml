apiVersion: v1
kind: Service
metadata:
  name: pi-gallary-web
spec:
  selector:
    app: pi-gallary-web
  ports:
    - protocol: TCP
      port: 80
      name: pi-gallary-web
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: geck
  namespace: geck
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 20m
spec:
  rules:
  - host: localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: pi-web-gallary
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pi-gallary-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pi-gallary-web
  template:
    metadata:
      labels:
        app: pi-gallary-web
    spec:
      containers:
        - name: pi-gallary-web
          image: bpatrik/pigallery2:1.9.3-alpine
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 80
          env:
            - name: NODE_ENV
              value: "production"
          volumeMounts:
            - name: pi-gallary-web-config-volume
              mountPath: /app/data/config
            - name: pi-gallary-web-db-volume
              mountPath: /app/data/db
            - name: pi-gallary-web-temp-volume
              mountPath: /app/data/tmp
            - name: photos-volume
              mountPath: /app/data/images
              readOnly: true
      volumes:
        - name: pi-gallary-web-config-volume
          hostPath:
            path: /home/geck/docker/pigallary-web/config
        - name: pi-gallary-web-db-volume
          hostPath:
            path: /home/geck/docker/pigallary-web/db
        - name: pi-gallary-web-temp-volume
          hostPath:
            path: /home/geck/docker/pigallary-web/tmp
        - name: photos-volume
          hostPath:
            path: /media/media/media/Photos